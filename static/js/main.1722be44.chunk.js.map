{"version":3,"sources":["components/Item.js","components/App.js","index.js"],"names":["Item","_ref","todo","deleteTodo","i","toggleComplete","react_default","a","createElement","className","style","completed","backgroundColor","color","onClick","colors","0","1","2","setColor","random","Math","floor","App","_useState","useState","_useState2","Object","slicedToArray","todos","updateTodo","_useState3","_useState4","inputText","updateInputText","newState","concat","toConsumableArray","slice","onSubmitTodo","e","preventDefault","length","onSubmit","type","onChange","target","value","map","components_Item","key","ReactDOM","render","components_App","document","getElementById"],"mappings":"8NAiCeA,SA5BF,SAAAC,GAA6C,IAA1CC,EAA0CD,EAA1CC,KAAMC,EAAoCF,EAApCE,WAAYC,EAAwBH,EAAxBG,EAAGC,EAAqBJ,EAArBI,eAcnC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAbW,WAChB,IAAIC,EAAQ,OAIZ,OAHIR,EAAKS,YACPD,GAAS,cAEJA,EAQSD,GAAaC,MAAO,CAACE,gBAAiBV,EAAKW,QACzDP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaK,QAAS,kBAAMX,EAAWC,KAAIE,EAAAC,EAAAC,cAAA,wBAE5DF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBP,EAAKA,MACxCI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaK,QAZT,WACvBT,EAAeD,KAWX,cCtBFW,SAAS,CACbC,EAAG,UACHC,EAAG,UACHC,EAAG,YAGCC,EAAW,WACf,IAAIC,EAASC,KAAKC,MAAsB,EAAhBD,KAAKD,UAC7B,OAAOL,EAAOK,IAmDDG,EAhDH,WAAM,IAAAC,EACYC,mBAAS,CAAC,CAACvB,KAAK,cAAeW,MAAOM,IAAYR,WAAW,GAAQ,CAACT,KAAK,kBAAmBW,MAAOM,IAAYR,WAAW,KADxIe,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACFI,EADEJ,EAAA,GAAAK,EAEqBN,mBAAS,IAF9BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAETE,EAFSD,EAAA,GAEEE,EAFFF,EAAA,GAWV7B,EAAa,SAACC,GAClB,IAAI+B,EAAQ,GAAAC,OAAAT,OAAAU,EAAA,EAAAV,CAAOE,EAAMS,MAAM,EAAGlC,IAAtBuB,OAAAU,EAAA,EAAAV,CAA6BE,EAAMS,MAAMlC,EAAE,KACvD0B,EAAWK,IAGP9B,EAAiB,SAACD,GACtB,IAAI+B,EAAWN,EAAMS,QACrBH,EAAS/B,GAAGO,WAAawB,EAAS/B,GAAGO,UACrCmB,EAAWK,IAQPI,EAAe,SAACC,GAtBN,IAACtC,EAuBfsC,EAAEC,iBACER,EAAUS,OAAS,IAxBRxC,EAyBL+B,EAxBVH,EAAU,GAAAM,OAAAT,OAAAU,EAAA,EAAAV,CAAKE,GAAL,CAAY,CAAC3B,OAAMW,MAAOM,IAAYR,WAAW,MAC3DuB,EAAgB,MA2BlB,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAekC,SAAUJ,GACvCjC,EAAAC,EAAAC,cAAA,SAAOoC,KAAK,OAAOC,SAjBL,SAACL,GACrBA,EAAEC,iBACFP,EAAgBM,EAAEM,OAAOC,QAeyBA,MAAOd,IACnD3B,EAAAC,EAAAC,cAAA,UAAQoC,KAAK,SAASG,MAAM,YAAYjC,QAASyB,GAAjD,aAEFjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcoB,EAAMmB,IAAI,SAAC9C,EAAME,GAAP,OAAaE,EAAAC,EAAAC,cAACyC,EAAD,CAAMC,IAAK9C,EAAGA,EAAGA,EAAGF,KAAMA,EAAMC,WAAYA,EAAYE,eAAgBA,UCrDpI8C,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAAQC,SAASC,eAAe","file":"static/js/main.1722be44.chunk.js","sourcesContent":["import React from 'react'\n// import moment from 'moment';\n\nimport '../css/Item.css';\n\nconst Item = ({ todo, deleteTodo, i, toggleComplete }) => {\n\n  const className = () => {\n    let style = 'item';\n    if (todo.completed) {\n      style += ' completed'\n    }\n    return style\n  }\n\n  const onCheckMarkClick = () => {\n    toggleComplete(i);\n  }\n\n  return (\n    <div className={className()} style={{backgroundColor: todo.color}}>\n      <div className=\"todo-title\">\n        {/* <div>TODO</div> */}\n        <div className=\"todo-close\" onClick={() => deleteTodo(i)}><strong>&times;</strong></div>\n      </div>\n      <div className=\"todo-description\">{todo.todo}</div>\n      <div className=\"todo-complete\">\n        <div className=\"check-mark\" onClick={onCheckMarkClick}>&#10003;</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Item;","import React, { useState } from 'react'\nimport Item from './Item';\n\nimport '../css/App.css';\n\nconst colors = {\n  0: '#fff740',\n  1: '#ff65a3',\n  2: '#7afcff'\n}\n\nconst setColor = () => {\n  let random = Math.floor(Math.random() * 3);\n  return colors[random];\n}\n\nconst App = () => {\n  const [todos, updateTodo] = useState([{todo:'Learn React', color: setColor(), completed: false}, {todo:'use React Hooks', color: setColor(), completed: false}]);\n  const [inputText, updateInputText] = useState('');\n\n\n  const addTodo = (todo) => {\n    updateTodo([...todos, {todo, color: setColor(), completed: false}]);\n    updateInputText('');\n  }\n\n\n  const deleteTodo = (i) => {\n    let newState = [...todos.slice(0, i), ...todos.slice(i+1)]\n    updateTodo(newState);\n  }\n\n  const toggleComplete = (i) => {\n    let newState = todos.slice();\n    newState[i].completed = !newState[i].completed\n    updateTodo(newState);\n  }\n\n  const onInputChange = (e) => {\n    e.preventDefault();\n    updateInputText(e.target.value);\n  }\n\n  const onSubmitTodo = (e) => {\n    e.preventDefault();\n    if (inputText.length > 0) {\n      addTodo(inputText);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Sticky Todo's</h1>\n      <div className=\"todos\">\n        <form className=\"todos-adding\" onSubmit={onSubmitTodo}>\n          <input type=\"text\" onChange={onInputChange} value={inputText}/>\n          <button type=\"button\" value=\"Add To-Do\" onClick={onSubmitTodo}>Add ToDo</button>\n        </form>\n        <div className=\"todos-list\">{todos.map((todo, i) => <Item key={i} i={i} todo={todo} deleteTodo={deleteTodo} toggleComplete={toggleComplete} />)}</div>\n      </div>\n    </div> \n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}