{"version":3,"sources":["components/Item.js","components/Modal.js","components/App.js","index.js"],"names":["Item","_ref","todo","deleteTodo","i","toggleComplete","toggleShow","_useState","useState","moment","time","fromNow","_useState2","Object","slicedToArray","updateFromNow","useEffect","a","setInterval","clearInterval","react_default","createElement","className","style","completed","backgroundColor","color","onClick","Modal","show","selected","updateTodoItem","todos","updateTodo","onSubmit","e","preventDefault","newTodo","assign","type","value","onChange","fn","target","handleOnChange","colors","0","1","2","setColor","random","Math","floor","App","toDate","_useState3","_useState4","inputText","updateInputText","_useState5","_useState6","updateShow","_useState7","_useState8","updateSelected","newState","concat","toConsumableArray","slice","onSubmitTodo","length","map","components_Item","key","components_Modal","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ede31073.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport moment from 'moment';\r\n\r\nimport '../css/Item.css';\r\n\r\nconst Item = ({ todo, deleteTodo, i, toggleComplete, toggleShow }) => {\r\n\r\n  let [fromNow, updateFromNow] = useState(moment(todo.time).fromNow())\r\n    \r\n  useEffect(() => {\r\n      let a = setInterval(() => {\r\n          updateFromNow(moment(todo.time).fromNow())\r\n      }, 10000)\r\n\r\n      return () => clearInterval(a);\r\n  })\r\n\r\n  const className = () => {\r\n    let style = 'item';\r\n    if (todo.completed) {\r\n      style += ' completed'\r\n    }\r\n    return style\r\n  }\r\n\r\n  const onCheckMarkClick = () => {\r\n    toggleComplete(i);\r\n  }\r\n\r\n  return (\r\n    <div className={className()} style={{backgroundColor: todo.color}}>\r\n      <div className=\"todo-title\">\r\n        {/* <div>TODO</div> */}\r\n        <div className=\"todo-close\" onClick={() => deleteTodo(i)}><strong>&times;</strong></div>\r\n      </div>\r\n      <div className=\"todo-description\">{todo.todo}</div>\r\n      <div className=\"todo-complete\">\r\n        <button className=\"edit-btn\" onClick={() => toggleShow(i)}>Edit</button>\r\n        <div className=\"fromNow\">{fromNow}</div>\r\n        <div className=\"check-mark\" onClick={onCheckMarkClick}>&#10003;</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Item;","import React, {useState} from 'react'\r\nimport '../css/Modal.css'\r\n\r\nconst Modal = ({show, toggleShow, selected, updateTodoItem, todos}) => {\r\n    let [todo, updateTodo] = useState(todos[selected].todo)\r\n\r\n    let handleOnChange = (e, fn) => {\r\n        e.preventDefault()\r\n        fn(e.target.value);\r\n    }\r\n\r\n    let handleButtonAdd = (e) => {\r\n        e.preventDefault()\r\n        let newTodo = Object.assign({}, todos[selected])\r\n        newTodo.todo = todo\r\n        updateTodoItem(selected, newTodo)\r\n        updateTodo('')\r\n        toggleShow(false)\r\n    }\r\n\r\n    return show ? (\r\n        <div className=\"modal-container\">\r\n            <div className=\"inner-modal\">\r\n                <div className=\"close-modal\" onClick={toggleShow}><p>x</p></div>\r\n                <div className=\"title\">Update Todo</div>\r\n                <form onSubmit={handleButtonAdd}>\r\n                    <textarea className='update-description' type='text' value={todo} onChange={(e) => handleOnChange(e, updateTodo)}></textarea>\r\n                    <button className=\"update-btn\">Update</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    \r\n        ) : null;\r\n}\r\n\r\nexport default Modal","import React, { useState } from 'react'\r\nimport Item from './Item'\r\nimport Modal from './Modal'\r\n\r\nimport moment from 'moment'\r\n\r\nimport '../css/App.css';\r\n\r\nconst colors = {\r\n  0: '#fff740',\r\n  1: '#ff65a3',\r\n  2: '#7afcff'\r\n}\r\n\r\nconst setColor = () => {\r\n  let random = Math.floor(Math.random() * 3);\r\n  return colors[random];\r\n}\r\n\r\nconst App = () => {\r\n  let [todos, updateTodo] = useState([{todo:'Learn React', color: setColor(), completed: false, time: moment().toDate()}, {todo:'use React Hooks', color: setColor(), completed: false, time: moment().toDate()}]);\r\n  let [inputText, updateInputText] = useState('');\r\n  let [show, updateShow] = useState(false);\r\n  let [selected, updateSelected] = useState(null);\r\n\r\n  const toggleShow = (i) => {\r\n    updateSelected(i)\r\n    updateShow(!show);\r\n  }\r\n\r\n  const addTodo = (todo) => {\r\n    updateTodo([...todos, {todo, color: setColor(), completed: false}]);\r\n    updateInputText('');\r\n  }\r\n\r\n  const deleteTodo = (i) => {\r\n    let newState = [...todos.slice(0, i), ...todos.slice(i+1)]\r\n    updateTodo(newState);\r\n  }\r\n\r\n  const editTodo = (i, newTodo) => {\r\n    let newState = [...todos.slice(0,i), newTodo, ...todos.slice(i+1)]\r\n    updateTodo(newState)\r\n  }\r\n\r\n  const toggleComplete = (i) => {\r\n    let newState = todos.slice();\r\n    newState[i].completed = !newState[i].completed\r\n    updateTodo(newState);\r\n  }\r\n\r\n  const onInputChange = (e) => {\r\n    e.preventDefault();\r\n    updateInputText(e.target.value);\r\n  }\r\n\r\n  const onSubmitTodo = (e) => {\r\n    e.preventDefault();\r\n    if (inputText.length > 0) {\r\n      addTodo(inputText);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Sticky Todo's</h1>\r\n      <div className=\"todos\">\r\n        <form className=\"todos-adding\" onSubmit={onSubmitTodo}>\r\n          <input type=\"text\" onChange={onInputChange} value={inputText}/>\r\n          <button type=\"button\" value=\"Add To-Do\" onClick={onSubmitTodo}>Add ToDo</button>\r\n        </form>\r\n        <div className=\"todos-list\">{todos.map((todo, i) => <Item key={i} i={i} todo={todo} deleteTodo={deleteTodo} toggleComplete={toggleComplete} toggleShow={toggleShow} />)}</div>\r\n      </div>\r\n      {show ? <Modal show={show} toggleShow={toggleShow} updateTodoItem={editTodo} selected={selected} todos={todos}/> : null }\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}